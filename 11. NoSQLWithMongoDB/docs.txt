Source code lấy từ folder 10. Sequelize, thêm module mongodb

- Folder 11. NoSQLWithMongoDB, nói về cách sử dụng NoSQl với MongoDB

1, Connect tới MongoDB ("./util/database.js"), ("server.js")
2, Tạo model, collection 'products' ("./models/product.js") và thêm dữ liệu products vào collection ("./controllers/admin.js")
3, Lấy tất cả products từ collection 'products', lấy cụ thề 1 product  ("./controllers/user.js"), ("./controllers/admin.js"), ("./model/products.js")
4, Cập nhật 1 product trong collection 'products' ("./controllers/admin.js") ("./models/products.js)
5, Xóa 1 product trong collection 'products' ("./controllers/admin.js") ("./models/products.js)
6, Tạo model, collection 'users' ("./models/user.js") và thêm dữ liệu users vào collection ("./controllers/auth.js")
Vì user có quan hệ 1-n với products, nên trong products chứa id của user
7, Tạo thuộc tính giỏ hàng trong user, chứa các products đã mua, quan hệ 1-1 với user, thêm chức năng addtoCart, getCart và deleteCart ("./models/user.js"), ("./controllers/user.js")
8, Tạo thuộc tính order trong user, chứa các products đã mua, thêm chức năng addOrder, getOrders ("./models/user.js"), ("./controllers/user.js")

-> Các thao tác CRUD với MongoDB ("./controllers/admin.js")
    -> insertOne() : thêm 1 document vào collection (Trả về Promise)
    -> insertMany() : thêm nhiều document vào collection (Trả về Promise)
    -> find() : tìm kiếm document trong collection (Trả về Cursor)
    -> findOne() : tìm kiếm 1 document trong collection (Trả về Promise)
    -> updateOne() : cập nhật 1 document trong collection (Trả về Promise)
    -> updateMany() : cập nhật nhiều document trong collection (Trả về Promise)
    -> deleteOne() : xóa 1 document trong collection (Trả về Promise)
    -> deleteMany() : xóa nhiều document trong collection (Trả về Promise)
    -> aggregate() : thực hiện các phép toán trên collection (Trả về Promise)
    -> countDocuments() : đếm số document trong collection (Trả về Promise)
    -> estimatedDocumentCount() : đếm số document trong collection (Trả về Promise)
    -> distinct() : trả về các giá trị duy nhất của 1 field trong collection (Trả về Promise)
    -> findOneAndDelete() : tìm kiếm và xóa 1 document trong collection (Trả về Promise)
    -> findOneAndReplace() : tìm kiếm và thay thế 1 document trong collection (Trả về Promise)
    -> findOneAndUpdate() : tìm kiếm và cập nhật 1 document trong collection (Trả về Promise)
    -> findOneAndUpsert() : tìm kiếm và cập nhật 1 document trong collection, nếu không tìm thấy thì thêm mới (Trả về Promise)
    -> replaceOne() : thay thế 1 document trong collection (Trả về Promise)
    -> watch() : theo dõi các thay đổi trên collection (Trả về ChangeStream)
    -> createIndex() : tạo index cho collection (Trả về Promise)
    -> createIndexes() : tạo nhiều index cho collection (Trả về Promise)
    -> dropIndex() : xóa index của collection (Trả về Promise)
    -> dropIndexes() : xóa nhiều index của collection (Trả về Promise)
    -> listIndexes() : liệt kê các index của collection (Trả về Cursor)
    -> indexExists() : kiểm tra index có tồn tại trong collection không (Trả về Promise)
    -> indexInformation() : trả về thông tin index của collection (Trả về Promise)
    -> stats() : trả về thông tin thống kê của collection (Trả về Promise)

