Source code lấy từ folder 9. Database, thêm module sequelize

- Folder 10. Sequelize, nói về cách sử dụng Sequelize trong NodeJS: tạo model, migration, seed, cách tạo quan hệ giữa các model, cách tạo quan hệ giữa các bảng trong database
- Sequelize (ORM) Object Relational Mapping là một kỹ thuật lập trình cho phép chúng ta truy cập vào database thông qua các đối tượng và thuộc tính của chúng (được tạo từ ngôn ngữ lập trình), thay vì phải viết các câu lệnh SQL truy vấn trực tiếp (như ở folder 9).
- Để sử dụng sequelize, cài thêm module sequelize kết hợp với module quản lý database (mysql2, pg, sqlite3, ...)
=> Trong project này sử dụng mysql2
1, Tạo kết nối đến MySQL ("./util/database.js")
2, Tạo model products("./models/product.js"), users("./models/users") bằng phương thức define của sequelize
    -> khi chạy, MySQL tự chuyển tên thành in thường và thêm 's' vào cuối
    -> Nó ngoài có các thuộc tính đã tạo sẵn thì còn tự thêm 2 thuộc tính createdAt và updatedAt vào (tự động tạo ra khi tạo mới và cập nhật)
3, Tạo bảng trong database bằng phương thức sync của sequelize ("./server.js)
    -> sync({force: true}) để xóa bảng cũ và tạo bảng mới
    -> sync() để tạo bảng mới nếu chưa có, nếu có sắn thì không làm gì cả
4, Sử dụng các thuộc tính của model để tạo dữ liệu, thuộc tính sẽ trả về 1 promise ("./controllers/admin.js"), ("./controllers/user.js")
    -> create() để tạo dữ liệu mới, VD: create({name: 'name', price: 1000})
    -> findAll() để lấy tất cả dữ liệu, VD: findAll({where: {id: 1}}) để lấy dữ liệu có id = 1
    -> findByPk() để lấy dữ liệu theo id, VD: findByPk(1)
    -> findOne() để lấy dữ liệu theo điều kiện, VD: findOne({where: {id: 1}})
    -> update() để cập nhật dữ liệu, VD: update({name: 'new name'}, {where: {id: 1}}) (Sau khi tìm được đối tượng cụ thể trong database)
    -> destroy() để xóa dữ liệu, VD: destroy({where: {id: 1}}) (Sau khi tìm được đối tượng cụ thể trong database)